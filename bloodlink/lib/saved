
//logout Function with button
      // body: Center(
      //   child: ElevatedButton(
      //     onPressed: () {
      //       FirebaseAuth.instance.signOut();
      //       Navigator.pushNamedAndRemoveUntil(
      //           context, '/login', (route) => false);
      //     },
      //     style: ButtonStyle(
      //       backgroundColor: MaterialStateProperty.all<Color>(
      //           const Color.fromARGB(255, 116, 17, 10)),
      //     ),
      //     child: const Text('LogOut'),
      //   ),
      // ),

// Complete code for firestore from DBESTECH(https://www.dbestech.com/tutorials/flutter-firebase-firestore-crud-create-update-delete-operations-real-time-database)
// import 'package:flutter/material.dart';
// import 'package:firebase_core/firebase_core.dart';
// import 'package:cloud_firestore/cloud_firestore.dart';

// void main() async {
//   WidgetsFlutterBinding.ensureInitialized();
//   await Firebase.initializeApp();
//   runApp(const MyApp());
// }

// class MyApp extends StatelessWidget {
//   const MyApp({Key? key}) : super(key: key);

//   @override
//   Widget build(BuildContext context) {
//     return const MaterialApp(
//       debugShowCheckedModeBanner: false,
//       title: 'Firebase Firestore',
//       home: HomePage(),
//     );
//   }
// }

// class HomePage extends StatefulWidget {
//   const HomePage({Key? key}) : super(key: key);

//   @override
//   _HomePageState createState() => _HomePageState();
// }

// class _HomePageState extends State<HomePage> {
// // text fields' controllers
//   final TextEditingController _nameController = TextEditingController();
//   final TextEditingController _priceController = TextEditingController();

//   final CollectionReference _products =
//       FirebaseFirestore.instance.collection('products');

//   Future<void> _create([DocumentSnapshot? documentSnapshot]) async {

//     await showModalBottomSheet(
//         isScrollControlled: true,
//         context: context,
//         builder: (BuildContext ctx) {
//           return Padding(
//             padding: EdgeInsets.only(
//                 top: 20,
//                 left: 20,
//                 right: 20,
//                 bottom: MediaQuery.of(ctx).viewInsets.bottom + 20),
//             child: Column(
//               mainAxisSize: MainAxisSize.min,
//               crossAxisAlignment: CrossAxisAlignment.start,
//               children: [
//                 TextField(
//                   controller: _nameController,
//                   decoration: const InputDecoration(labelText: 'Name'),
//                 ),
//                 TextField(
//                   keyboardType:
//                   const TextInputType.numberWithOptions(decimal: true),
//                   controller: _priceController,
//                   decoration: const InputDecoration(
//                     labelText: 'Price',
//                   ),
//                 ),
//                 const SizedBox(
//                   height: 20,
//                 ),
//                 ElevatedButton(
//                   child: const Text('Create'),
//                   onPressed: () async {
//                     final String name = _nameController.text;
//                     final double? price =
//                     double.tryParse(_priceController.text);
//                     if (price != null) {
//                         await _products.add({"name": name, "price": price});

//                       _nameController.text = '';
//                       _priceController.text = '';
//                         Navigator.of(context).pop();
//                     }
//                   },
//                 )
//               ],
//             ),
//           );

//         });
//   }
//   Future<void> _update([DocumentSnapshot? documentSnapshot]) async {
//     if (documentSnapshot != null) {

//       _nameController.text = documentSnapshot['name'];
//       _priceController.text = documentSnapshot['price'].toString();
//     }

//     await showModalBottomSheet(
//         isScrollControlled: true,
//         context: context,
//         builder: (BuildContext ctx) {
//           return Padding(
//             padding: EdgeInsets.only(
//                 top: 20,
//                 left: 20,
//                 right: 20,
//                 bottom: MediaQuery.of(ctx).viewInsets.bottom + 20),
//             child: Column(
//               mainAxisSize: MainAxisSize.min,
//               crossAxisAlignment: CrossAxisAlignment.start,
//               children: [
//                 TextField(
//                   controller: _nameController,
//                   decoration: const InputDecoration(labelText: 'Name'),
//                 ),
//                 TextField(
//                   keyboardType:
//                       const TextInputType.numberWithOptions(decimal: true),
//                   controller: _priceController,
//                   decoration: const InputDecoration(
//                     labelText: 'Price',
//                   ),
//                 ),
//                 const SizedBox(
//                   height: 20,
//                 ),
//                 ElevatedButton(
//                   child: const Text( 'Update'),
//                   onPressed: () async {
//                     final String name = _nameController.text;
//                     final double? price =
//                         double.tryParse(_priceController.text);
//                     if (price != null) {

//                         await _products
//                             .doc(documentSnapshot!.id)
//                             .update({"name": name, "price": price});
//                       _nameController.text = '';
//                       _priceController.text = '';
//                         Navigator.of(context).pop();
//                     }
//                   },
//                 )
//               ],
//             ),
//           );
//         });
//   }

//   Future<void> _delete(String productId) async {
//     await _products.doc(productId).delete();

//     ScaffoldMessenger.of(context).showSnackBar(const SnackBar(
//         content: Text('You have successfully deleted a product')));
//   }

//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       appBar: AppBar(
//         title: const Center(child: Text('Firebase Firestore')),
//       ),
//       body: StreamBuilder(
//         stream: _products.snapshots(),
//         builder: (context, AsyncSnapshot<QuerySnapshot> streamSnapshot) {
//           if (streamSnapshot.hasData) {
//             return ListView.builder(
//               itemCount: streamSnapshot.data!.docs.length,
//               itemBuilder: (context, index) {
//                 final DocumentSnapshot documentSnapshot =
//                     streamSnapshot.data!.docs[index];
//                 return Card(
//                   margin: const EdgeInsets.all(10),
//                   child: ListTile(
//                     title: Text(documentSnapshot['name']),
//                     subtitle: Text(documentSnapshot['price'].toString()),
//                     trailing: SizedBox(
//                       width: 100,
//                       child: Row(
//                         children: [
//                           IconButton(
//                               icon: const Icon(Icons.edit),
//                               onPressed: () =>
//                                   _update(documentSnapshot)),
//                           IconButton(
//                               icon: const Icon(Icons.delete),
//                               onPressed: () =>
//                                   _delete(documentSnapshot.id)),
//                         ],
//                       ),
//                     ),
//                   ),
//                 );
//               },
//             );
//           }

//           return const Center(
//             child: CircularProgressIndicator(),
//           );
//         },
//       ),
// // Add new product
//       floatingActionButton: FloatingActionButton(
//         onPressed: () => _create(),
//         child: const Icon(Icons.add),

//       ),
//         floatingActionButtonLocation: FloatingActionButtonLocation.centerFloat
//     );
//   }
// }


// //firestore data collection
// //checking
//                         Future<DocumentSnapshot> getUserData(
//                             String userId) async {
//                           final userRef = FirebaseFirestore.instance
//                               .collection('USERS')
//                               .doc(userId);
//                           final userDoc = await userRef.get();
//                           return userDoc;
//                         }

//                         void getUserProfile(String userId) async {
//                           final userData = await getUserData(userId);
//                           if (userData.exists) {
//                             final namedb = userData.get('Name');
//                             final emaildb = userData.get('E-mail Address');
//                             final bloodGroupdb = userData.get('Blood Group');
//                             print(
//                                 'Name: $namedb\nEmail: $emaildb\nBlood Group: $bloodGroupdb');
//                           } else {
//                             print('User not found.');
//                           }
//                         }

//                         //checking